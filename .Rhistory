spread(Database, proportion) %>%
gather(Database, proportion)
textdf %>% count(Database, word)
textdf %>% count(Database, word, sort = TRUE)
textdf %>% count(Database, word, sort = TRUE) %>% group_by(Database)
textdf %>%
count(Database, word) %>%
mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_col()
textdf %>%
count(Database, word) %>%
mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter()
textdf %>%
count(Database, word) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter()
textdf %>%
count(Database, word) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter() +
facet_wrap(~Database)
textdf %>%
count(Database, word) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter() +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
textdf %>%
count(Database, word) %>%
filter(n = 50) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter() +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
textdf %>%
count(Database, word > 50) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter() +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
textdf %>%
count(Database, word) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter() +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
textdf %>%
count(Database, word) %>%
filter(n > 50) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter() +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
textdf %>%
count(Database, word) %>%
filter(n > 10) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter() +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
textdf %>%
count(Database, word) %>%
filter(n > 1) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter() +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
textdf %>%
count(Database, word) %>%
filter(n > 2) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter() +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
textdf %>%
count(Database, word) %>%
filter(n > 2) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter() +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
textdf %>%
count(Database, word) %>%
filter(n > 3) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter() +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
textdf %>%
count(Database, word) %>%
filter(n > 5) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter() +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
textdf %>%
count(Database, word) %>%
filter(n > 4) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter() +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
textdf %>%
count(Database, word) %>%
filter(n > 4) %>%
group_by(Database) %>%
mutate(log(proportion = n / sum(n))) %>%
#mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter() +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
textdf %>%
count(Database, word) %>%
filter(n > 4) %>%
group_by(Database) %>%
mutate(proportion = log(n) / sum(log(n))) %>%
#mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter() +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
textdf %>%
count(Database, word) %>%
filter(n > 4) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n)) %>%
mutate(log(n)) %>%
#mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter() +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
textdf %>%
count(Database, word) %>%
filter(n > 4) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter() +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
textdf %>%
count(Database, word) %>%
filter(n > 4) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter() +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
facet_wrap(~Database)
library(scales)
textdf %>%
count(Database, word) %>%
filter(n > 4) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter() +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
facet_wrap(~Database)
textdf %>%
count(Database, word) %>%
filter(n > 4) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter() +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(label = percent_format()) +
facet_wrap(~Database)
textdffreq <- textdf %>%
count(Database, word) %>%
filter(n > 4) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n))
View(textdffreq)
ggplot(textdffreq, aes(x = proportion, y = word,
color = abs(word - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~Database, ncol = 2) +
theme(legend.position="none") +
labs(y = "Test", x = NULL)
ggplot(textdffreq, aes(x = proportion, y = word,
color = abs(proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~Database, ncol = 2) +
theme(legend.position="none") +
labs(y = "Test", x = NULL)
ggplot(textdffreq, aes(x = proportion, y = word,
color = abs(proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~Database, ncol = 2) +
theme(legend.position="none") +
labs(y = "Test", x = NULL)
textdf %>%
count(Database, word) %>%
filter(n > 4) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter() +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(label = percent_format()) +
facet_wrap(~Database)
textdf %>%
count(Database, word) %>%
filter(n > 4) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter() +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
ggplot(textdffreq, aes(x = word, y = proportion,
color = abs(proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~Database) +
theme(legend.position="none") +
labs(y = "Test", x = NULL)
ggplot(textdffreq, aes(x = word, y = proportion)) +
geom_abline() + geom_jitter() +
geom_text(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
facet_wrap(~Databases)
ggplot(textdffreq, aes(x = word, y = proportion)) +
geom_abline() + geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
ggplot(textdffreq, aes(x = word, y = proportion)) +
geom_abline() + geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Databases)
ggplot(textdffreq, aes(x = word, y = proportion)) +
geom_abline() + geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
ggplot(textdffreq, aes(x = word, y = proportion)) +
#geom_abline() + geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_abline() + geom_jitter() +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
ggplot(textdffreq, aes(x = word, y = proportion)) +
geom_abline() + geom_jitter(alpha = 0.1, size = 1, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
ggplot(textdffreq, aes(x = word, y = n)) +
geom_abline() + geom_jitter(alpha = 0.1, size = 1, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
ggplot(textdffreq, aes(x = word, y = log(n))) +
geom_abline() + geom_jitter(alpha = 0.1, size = 1, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
ggplot(textdffreq, aes(x = word, y = log(n))) +
geom_jitter(alpha = 0.1, size = 1, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
ggplot(textdffreq, aes(x = word, y = log(n))) +
geom_jitter(alpha = 0.1, size = 1) + # width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
ggplot(textdffreq, aes(x = word, y = n)) +
geom_jitter(alpha = 0.1, size = 1) + # width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
ggplot(textdffreq, aes(x = word, y = log(n))) +
geom_jitter(alpha = 0.1, size = 1) + # width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
?geom_jitter
ggplot(textdffreq, aes(x = word, y = log(proportion))) +
geom_jitter(alpha = 0.1, size = 1) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
ggplot(textdffreq, aes(x = word, y = log(n))) +
geom_jitter(alpha = 0.1, size = 1) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database) +
theme(legend.position = "left")
ggplot(textdffreq, aes(x = word, y = log(n))) +
geom_jitter(alpha = 0.1, size = 1) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database, ncol = 1) +
theme(legend.position = "none")
textdf %>%
count(Database, word) %>%
filter(n > 4) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter() +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
textdffreq <- textdf %>%
count(Database, word * Freq) %>%
filter(n > 4) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n))
# Chose n > 96 to get the top ten terms
textdf %>%
count(table(word Freq), sort = TRUE) %>%
filter(n > 96) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip() +
theme_bw()
### Word frequencies ###
# Examine single terms only
textdf <- textdf %>%
unnest_tokens(repeat(word, Freq), Term)
### Word frequencies ###
# Examine single terms only
textdf <- textdf %>%
unnest_tokens(rep(word, Freq), Term)
rep(textdf$word ,textdf$Freq)
### Word frequencies ###
# Examine single terms only
textdf <- textdf %>%
unnest_tokens(rep(word, Freq), Term)
### Word frequencies ###
# Examine single terms only
textdf <- textdf %>%
unnest_tokens(word, Term)
### Word frequencies ###
# Examine single terms only
textdf <- textdf %>%
unnest_tokens(word, Term)
### Word frequencies ###
# Examine single terms only
textdf <- textdf %>%
unnest_tokens(word, text)
### Word frequencies ###
# Examine single terms only
textdf <- textdf %>%
unnest_tokens(word, Term)
textdf <- tibble(dbterms)
### Word frequencies ###
# Examine single terms only
textdf <- textdf %>%
unnest_tokens(word, Term)
# Don't remove stop words in n-gram analysis later
textdf <- textdf %>%
anti_join(stop_words)
View(textdffreq)
View(textdf)
textdf %>%
count(Freq, sort = TRUE) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip() +
theme_bw()
textdf %>%
count(Freq, sort = TRUE) %>%
mutate(Freq = reorder(Freq, n)) %>%
ggplot(aes(Freq, n)) +
geom_col() +
xlab(NULL) +
coord_flip() +
theme_bw()
textdf %>%
count(Database, Freq, word) %>%
filter(n > 4) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n)) %>%
ggplot(aes(word, proportion)) +
geom_abline() +
geom_jitter() +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database)
textdffreq <- textdf %>%
count(Database, Freq, word) %>%
filter(n > 4) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n))
View(textdffreq)
textdffreq <- textdf %>%
count(Database, word) %>%
filter(n > 4) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n))
textdffreq0 <- textdf %>%
count(Database, word) %>%
filter(n > 4) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n))
textdffreq1 <- textdf %>%
count(Database, Freq, word) %>%
filter(n > 4) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n))
View(textdffreq0)
View(textdffreq1)
textdffreq0 <- textdf %>%
count(Database, word) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n))
textdffreq1 <- textdf %>%
count(Database, Freq, word) %>%
group_by(Database) %>%
mutate(proportion = n / sum(n))
ggplot(textdffreq0, aes(x = word, y = log(n))) +
geom_jitter(alpha = 0.1, size = 1) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database, ncol = 1) +
theme(legend.position = "none")
ggplot(textdffreq1, aes(x = word, y = log(n))) +
geom_jitter(alpha = 0.1, size = 1) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
facet_wrap(~Database, ncol = 1) +
theme(legend.position = "none")
rm(textdffreq0, textdffreq1)
rm(textdffreq)
### Word frequencies ###
# Examine single terms only
textdf <- textdf %>%
unnest_tokens(word, Term)
textdf <- tibble(dbterms)
### Word frequencies ###
# Examine single terms only
textdf <- textdf %>%
unnest_tokens(word, Term)
# Don't remove stop words in n-gram analysis later
textdf <- textdf %>%
anti_join(stop_words)
# Chose n > 96 to get the top ten terms
textdf %>%
count(word, sort = TRUE) %>%
#filter(n > 96) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col() +
xlab(NULL) +
coord_flip() +
theme_bw()
rep(textdf$word, textdf$Freq)
